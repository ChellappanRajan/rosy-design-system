/* You can add global styles to this file, and also import other style files */
.gray {
  background-color: #e2e2e2;
}

.flex-row {
  display: flex;
  align-items: center;
  gap: 12px;
}

// .circle {
//   width: 30px;
//   height: 30px;
//   border-radius: 50%;
// }

.short-row {
  height: 30px;
  flex: 1;
  border-radius: 8px;
}

.body-box {
  margin-top: 12px;
  width: 342px;
  height: 100px;
  border-radius: 8px;
}

.container {
  display: inline-block;

}

.header{
    display: flex;
    align-items:center;
    justify-content: space-between;
    gap:1rem;
    .right-side{
      // width:20%;
    }
    rosy-shimmer-loader:nth-of-type(1){
     --height: 30px;
     --width:80%;
    }
    // container-type:inline-size;
    // @container(min-width: 650px){
    //   rosy-shimmer-loader:nth-child(1){
    //     --width:80%;
    //   }
    // }
    div{
      display:flex;
      gap:1rem;
      align-items:center;
    }
}
.card-wrapper{
    margin-top: 2rem;
    display: flex;
    overflow: hidden;
    flex-direction: column;
    gap: 1rem;

}
.card-container{
  display:flex;
  gap:1rem;
  .card{
    --width:400px;
    --height: 200px;
  }
}
.footer{
  margin-top:1rem;
  overflow: hidden;
display: flex;
gap:1rem;
}
.footer-card{
--width:100px;
--height: 100px;
}


.center{
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

@keyframes color-hue{
  from{--color-hue:0;}
   to{--color-hue:180;}
}

@property --color-hue{
  syntax:"<number>";
  initial-value:0;
  inherits:true;
}

@container style(--variant:sm){
  .card{
    font-size: 18px;
    font-weight: bold;
  }
}
@container style(--variant:lg){
  .card {
    font-size: 24px;
    font-weight: bold;
  }
}


/* Shimmer Utilities starts */

.r-rounded{
  --shape:rounded;
}

.rounded-md{
  --shape:rounded-md;
}
.rounded-lg{
  --shape:rounded-lg;
}
.rounded-full{
  --shape:rounded-full;
}
.rounded-none{
  --shape:rounded-none;
}

/* Shimmer Utilities End */

//For some reason @property not working within web component

@property --placement{
  syntax: 'top | bottom | left | right';
  inherits: true;
  initial-value: top;
}

@property --shape{
  syntax: "rounded | rounded-md | rounded-lg | rounded-full | rounded-none";
  inherits:true;
  initial-value: rounded-none;
}
// @propery --index{
//   syntax:'',
//   inherits:true,
//   initial-value:0;
// }
*{
  padding: 0;
  margin: 0;
}
body,*{
  font-family: "Geist", serif;
  // font-optical-sizing: auto;
  // font-weight: normal;
  // font-style: normal;
}


ul{
  list-style-type: none;
}
span{
  color:white;
  padding-left: 1rem

}

@keyframes scale-up {
  from {
    background-color: red;
    transform: scaleX(0);
  }
  to {
    background-color: darkred;
    transform: scaleX(1);
  }
}

// #progressbar {
//   animation: 2.5s linear forwards scale-up;
//   animation-timeline: scroll(root block);

// }

@keyframes blur-in {
  from {
    border-radius: 0;
    backdrop-filter: blur(0);
    background: rgb(30 41 59 / 1);
    width: 100vw;
  }
  to {
    border-radius: 3rem;
    backdrop-filter: blur(8px);
    background: rgb(30 41 59 / 0.75);
    width: 50vw;
  }
}

app-learning{
  background-color: #e9eef6;
  width: 100vw;
  height: calc(100vh - 56px);
  display: flex;
  align-items: center;
  justify-content: center;
}
